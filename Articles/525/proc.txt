Procedure ComputeReferencedIdentifiers {
    Arguments: (s_checkIds,bp_isUsedInModel,bp_isUsedInWinUI,bp_isUsedInWebUI);
    Body: {
        block ! Search in the model
            s_attributesSearched := AllAttributeNames - data { Interface, Comment } ;
            for IndexIdentifiers do
                _s_helper := { IndexIdentifiers } ;
                _s_referencedIdentifiers := 
                    ReferencedIdentifiers(
                        searchIdentSet :  _s_helper, 
                        searchAttrSet  :  s_attributesSearched, 
                        recursive      :  0);
                _s_addedSets := {} ;
                for _i_ri | IdentifierType( _i_ri ) = 'index'  do
                    _ep_referencedSet := indexRange( _i_ri ) ;
                    if _ep_referencedSet in AllIdentifiers then
                        _s_addedSets += _ep_referencedSet ;
                    endif ;
                endfor ;
                _s_referencedIdentifiers += _s_addedSets ;
                is_uses( IndexIdentifiers ) := _s_referencedIdentifiers ;
            endfor ;
            bp_uses( i_fromId, i_toId ) := i_toId in is_uses( i_fromId );
            bp_isUsedInModel( i_ci ) := exists( i_fromId | bp_uses( i_fromId, i_ci ) );
        endblock ;
        
        !DebuggerBreakpoint();
        block ! Search in the WinUI
            empty bp_isUsedInWinUI ;
            _bp_pga := PageGetAll( _s_pages );
            if _bp_pga then
                for _i_pg do
                    sp_pageName := formatString( "%e", _i_pg );
                    _bp_pgui := PageGetUsedIdentifiers( sp_pageName, s_identifiersOnPage );
                    if not _bp_pgui then
                        raise warning "Obtaining identifiers from page " + sp_pageName + " failed: " + CurrentErrorMessage ;
                    endif ;
                    bp_isUsedInWinUI( i_iop ) := 1;
                endfor ;
            endif ;
        endblock ;
        
        block ! Search in the WebUI
            empty bp_isUsedInWebUI ;
            _sp_fn := ".\\MainProject\\WebUI\\webui.json" ;
            if FileExists( _sp_fn ) then
                _sp_webuiText := FileRead( _sp_fn );
                bp_isUsedInWebUI( i_ci ) := 1 $ FindString( _sp_webuiText, i_ci, caseSensitive: 0, wordOnly: 1 );
            endif ;
        endblock ;
    }
    DeclarationSection model_locDecls {
        Set s_attributesSearched {
            SubsetOf: AllAttributeNames;
        }
        Set _s_helper {
            SubsetOf: AllSymbols;
        }
        Set _s_addedSets {
            SubsetOf: AllIdentifiers;
        }
        Set _s_referencedIdentifiers {
            SubsetOf: AllSymbols;
            Index: _i_ri;
        }
        ElementParameter _ep_referencedSet {
            Range: AllSymbols;
        }
        Set s_checkIds {
            SubsetOf: AllIdentifiers;
            Index: i_ci;
            Property: Input;
        }
        Parameter bp_uses {
            IndexDomain: (i_fromId, i_toId);
            Range: binary;
        }
        Parameter bp_isUsedInModel {
            IndexDomain: i_ci;
            Range: binary;
            Property: Output;
        }
        Parameter bp_isUsedInWinUI {
            IndexDomain: i_ci;
            Range: binary;
            Property: Output;
        }
        Parameter bp_isUsedInWebUI {
            IndexDomain: i_ci;
            Range: binary;
            Property: Output;
        }
    }
    DeclarationSection winui_locDecls {
        Set _s_pages {
            Index: _i_pg;
        }
        StringParameter sp_pageName;
        Parameter _bp_pga {
            Comment: "Return value for PageGetAll call.";
        }
        Parameter _bp_pgui {
            Comment: "Return value for PageGetUsedIdentifiers call";
        }
    }
    DeclarationSection webui_locDecls {
        StringParameter _sp_webuiText;
        StringParameter _sp_fn;
    }
}
